head	1.6;
access;
symbols;
locks
	cacti:1.6; strict;
comment	@# @;


1.6
date	2007.01.02.04.07.10;	author cacti;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.01.18.33.45;	author cacti;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.01.18.14.51;	author cacti;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.01.06.48.08;	author cacti;	state Exp;
branches;
next	1.2;

1.2
date	2006.12.30.20.01.20;	author cacti;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.30.05.48.26;	author cacti;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Revert to naive authentication to support dynamic IPs.
@
text
@<?php

include("./include/passwds.php");
/*
 Edoors.com
*/

function construct_ds($data, $type) {
   	$dses = explode(" ", $data); 
      	$dsf=""; 
  	foreach ($dses as $ds) {
         if ($ds) { 
           $ds=escapeshellarg($ds);
           $dsf = $dsf . "DS:$ds:$type \\\n"; 
         }
        }
        return $dsf;
}
  
#http://mnt.edoors.info/receiver.php?host=set1&group=Monitor&pwd=a

/* set default action */
if (!isset($_REQUEST["act"])) { $_REQUEST["act"] = ""; }

// data type: gauge or counter ?
switch ($_GET["dt"]) { 
   case 'c':  
    $dt = 'COUNTER:480:0:U'; 
    break;
   case 'g':  
    $dt = 'GAUGE:480:0:U'; 
    break;
   default: 
    echo "access-denied";   // do not change the msg
    exit;
}

$rrdpath='/home/cacti/rra'; 
$rrdcreate='/usr/bin/rrdtool create'; 
$rrdupdate='/usr/bin/rrdtool update'; 
$step="--step 240 \\\n";   // 4 minutes time step 
$rras=<<<EOS
RRA:AVERAGE:0.5:1:1200 \
RRA:AVERAGE:0.5:5:1400 \
RRA:AVERAGE:0.5:30:1550 \
RRA:AVERAGE:0.5:360:1600 \
RRA:MAX:0.5:1:1200 \
RRA:MAX:0.5:5:1400 \
RRA:MAX:0.5:30:1550 \
RRA:MAX:0.5:360:1600 
EOS;

// rrd file name eg. webapp-db1-cpu-usage.rrd
$user_host=$_GET["group"] . '-' . $_GET["host"]; 
$rraf1=$rrdpath . '/' . $user_host; 

list($t1, $tmp) = explode("-", $_GET["type"]); 
$upswd = $pswd[ $_GET["group"] ]; 

if ($_REQUEST["act"] == "create" ) {
   if ( !isset($upswd) || $upswd !== $_GET["pwd"] ) {
     echo "access-denied";   // do not change the msg
     exit; 
   }

     switch ($t1) { 
     case 'cpu': 
     case 'mem':
     case 'proc':
     case 'disk':
     case 'net':
     case 'sock':
        $dsf = construct_ds($_GET["data"], $dt);
        break;
     default: 
        $dsf =""; 
     } // e switch
  
  // do create
     if ($dsf) { 
        $rraf=$rraf1 . '-' . $_GET["type"] . '.rrd'; 
        if ( !is_file($rraf)  )    //do not overwrite existing rra file
        system("$rrdcreate $rraf $step $dsf $rras"); 
        // auth: credentials for update operations:  md5(pswd + IP addr)
        // won't work for dynamic IPs, so diable it. Use naive version.
       //$newkey=md5($upswd . $_SERVER['REMOTE_ADDR']); 
       $newkey=md5($upswd);
       echo $newkey; 
     }

} 

if ($_REQUEST["act"] == "update" ) {
     // authentication
     if ( !isset($upswd) || 
        //md5($upswd . $_SERVER['REMOTE_ADDR']) !== $_GET["pwd"] ) {
        md5($upswd) !== $_GET["pwd"] ) {
       echo "access-denied";   // do not change the msg
       exit; 
     }
     
     list($t1, $tmp) = explode("-", $_GET["type"]); 
     switch ($t1) {
     case 'cpu':
     case 'mem':
     case 'proc':
     case 'disk':
     case 'net':
     case 'sock':
        $dsf = "N:" . escapeshellarg($_GET["data"]);
        break;
     default: 
        $dsf = ""; 
     } // e switch

  // do update 
     if ($dsf) {
        $rraf=$rraf1 . '-' . $_GET["type"] . '.rrd';
        system("$rrdupdate $rraf $dsf");
     }

}

?>
@


1.5
log
@*** empty log message ***
@
text
@d85 3
a87 1
       $newkey=md5($upswd . $_SERVER['REMOTE_ADDR']); 
d96 2
a97 1
        md5($upswd . $_SERVER['REMOTE_ADDR']) !== $_GET["pwd"] ) {
@


1.4
log
@do not overwrite existing rra file when installing.
@
text
@d2 2
a19 11
/* authentication scheme: when installing, client sends hashed
 passwd to server. if authenticated, server sends back to client
  newkey=md5(md5(pswd) + client IP). Client saves this newkey
  and uses newkey for updating operations. 
 */
$pswd["WEBAPP"] = md5("sysmon");
$pswd["admin"] = md5("cpublic");
$pswd["SE"] = md5("sysmon");
$pswd["PH"] = md5("fpublic");
$pswd["Monitor"] = md5("fpublic");

@


1.3
log
@Now supports authentication.
@
text
@d91 1
@


1.2
log
@fixed net interface .
@
text
@a0 2
<html><body> 
<pre>
d18 12
d43 1
a43 1
    echo "Wrong data type"; 
d67 1
d70 4
a82 1
        echo "create " . $_GET["type"] . " data\n";
d92 3
a94 1
        echo "$rrdcreate $rraf $step $dsf $rras"; 
d100 7
a106 1

a124 1
        echo "$rrdupdate $rraf $dsf";
a129 3
</pre>
</body>
</html>
@


1.1
log
@Initial revision
@
text
@d56 2
d60 7
a66 10
     switch ($_GET["type"] ) { 
     case 'cpu-usage': 
     case 'cpu-load':
     case 'mem-usage':
     case 'proc-usage':
     case 'disk-read':
     case 'disk-write':
     case 'disk-usage':
     case 'net-io':
     case 'sock-usage':
d85 8
a92 10
     switch ($_GET["type"] ) {
     case 'cpu-usage':
     case 'cpu-load':
     case 'mem-usage':
     case 'proc-usage':
     case 'disk-read':
     case 'disk-write':
     case 'disk-usage':
     case 'net-io':
     case 'sock-usage':
@
